<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.sportClub.provider.dao.TopicDao">
    <!-- 查询话题列表的自定义结果集 -->
    <resultMap id="queryTopicListMap" type="com.sportClub.common.dto.topicDto.QueryTopicListDto">
        <id property="topicId" column="topic_id"/>
        <result property="topicName" column="topic_name"/>
        <result property="topicImgUrl" column="topic_pic_url"/>
    </resultMap>

    <!-- 查询单个话题信息的自定义结果集 -->
    <resultMap id="queryOneTopicDtoMap" type="com.sportClub.common.dto.topicDto.QueryOneTopicDto">
        <id property="topicId" column="topic_id"/>
        <result property="topicName" column="topic_name"/>
        <result property="topicContent" column="topic_describe"/>
        <result property="userCount" column="userCount"/>
        <result property="talkCount" column="talkCount"/>
    </resultMap>

    <!-- 查询单个在线课程的自定义结果集 -->
    <resultMap id="queryOntimeCourseMap" type="com.sportClub.common.dto.topicDto.QueryOntimeCourseDto">
        <id property="ontimeCourseId" column="course_id"/>
        <result property="ontimeCourseName" column="course_name"/>
        <result property="ontimeCourseLv" column="lv_name"/>
        <result property="ontimeCourseUrl" column="course_url"/>
    </resultMap>

    <!-- 查询所有在线课程的自定义结果集 -->
    <resultMap id="queryOntimeCourseListMap" type="com.sportClub.common.dto.topicDto.QueryOntimeCourseListDto">
        <id property="ontimeCourseId" column="course_id"/>
        <result property="ontimeCourseName" column="course_name"/>
        <result property="ontimeCourseLv" column="lv_name"/>
    </resultMap>

    <!-- 用户查询话题下所有动态的自定义结果集 -->
    <resultMap id="queryTalkListMap" type="com.sportClub.common.dto.topicDto.QueryTalkListDto">
        <id property="talkId" column="talk_id"/>
        <result property="userNickName" column="user_nickname"/>
        <result property="talkContent" column="talk_content"/>
        <result property="talkImgUrl" column="talk_pic_url"/>
        <result property="talkLikeNum" column="talk_like_num"/>
        <result property="talkCommentCount" column="commentCount"/>
    </resultMap>

    <!-- 商家查看话题列表，包括过期和删除的话题 -->
    <select id="adminQueryTopicList" resultMap="queryTopicListMap">
        select topic_id,
               topic_name,
               topic_pic_url
        from db_sport.topic;
    </select>

    <!-- 用户查看话题列表，只能查看未过期和删除的话题 -->
    <select id="userQueryTopicList" resultMap="queryTopicListMap">
        select topic_id,
               topic_name,
               topic_pic_url
        from db_sport.topic
        where topic_end_time IS NULL;
    </select>

    <!-- 通过话题Id查询话题信息 包含话题下的动态数和用户数 -->
    <select id="queryTopicByTopicId" resultMap="queryOneTopicDtoMap">
        SELECT userCount,
               talkCount,
               topic_id,
               topic_name,
               topic_describe
        FROM (SELECT COUNT(DISTINCT user_id) AS userCount FROM db_sport.talk) AS table1,
             (SELECT COUNT(talk_id) AS talkCount FROM db_sport.talk WHERE talk.topic_id = #{topicId}) as table2,
             db_sport.topic
        WHERE topic.topic_id = #{topicId}
    </select>

    <!-- 添加话题 -->
    <insert id="insertTopic">
        insert into db_sport.topic (topic_name, topic_describe, topic_pic_url, topic_creat_time)
        values (#{topicName}, #{topicContent}, #{topicImgUrl}, (select now()))
    </insert>

    <!-- 修改话题信息 -->
    <update id="updateTopicById">
        update db_sport.topic
        <set>
            <if test="topicName != null">
                topic_name = #{topicName},
            </if>
            <if test="topicDescribe != null">
                topic_describe = #{topicDescribe},
            </if>
            <if test="topicPicUrl != null">
                topic_pic_url = #{topicPicUrl}
            </if>
        </set>
        where topic_id = #{topicId}
    </update>

    <!-- 对话题进行逻辑删除，通过添加结束时间，表示该话题已经结束 -->
    <update id="deleteTopicById">
        update db_sport.topic
        set topic_end_time = (select now())
        where topic_id = #{topicId}
    </update>

    <!-- 通过Id查看在线课程 -->
    <select id="queryOntimeCourseById" resultMap="queryOntimeCourseMap">
        select tb1.course_id,
               tb1.course_name,
               tb2.lv_name,
               tb1.course_url
        from db_sport.ontime_course tb1
                     left join db_sport.ontime_course_lv tb2 on tb1.course_lv = tb2.course_lv
        where tb1.course_id = #{courseId};
    </select>

    <!-- 查看所有在线课程 -->
    <select id="queryOntimeCourseList" resultMap="queryOntimeCourseListMap">
        select tb1.course_id,
               tb1.course_name,
               tb2.lv_name
        from db_sport.ontime_course tb1
                     left join db_sport.ontime_course_lv tb2 on tb1.course_lv = tb2.course_lv;
    </select>


    <!-- 在线课程添加 -->
    <insert id="insertOntimeCourse">
        insert into db_sport.ontime_course (course_name, course_url, course_lv)
        values (#{courseName}, #{courseUrl}, #{courseLv})
    </insert>

    <!-- 删除指定在线课程 -->
    <delete id="deleteOntimeCourseById">
        delete
        from db_sport.ontime_course
        where course_id = #{courseId}
    </delete>

    <!-- 修改指定在线课程 -->
    <update id="updateOntimeCourse">
        update db_sport.ontime_course
        <set>
            <if test="courseName != null">
                course_name = #{courseName},
            </if>
            <if test="courseUrl != null">
                course_url =#{courseUrl},
            </if>
            <if test="courseLv != null">
                course_lv = #{courseLv}
            </if>
        </set>
        where course_id = #{courseId}
    </update>

    <!-- 用户在某话题下发表动态 -->
    <insert id="insertTalk">
        insert into db_sport.talk (talk_content, talk_pic_url, talk_creat_time, user_id, topic_id)
        VALUES (#{talkContent}, #{talkPicUrl}, (select now()), #{userId}, #{topicId})
    </insert>

    <!-- 用户查询话题下的所有动态 -->
    <select id="queryTalkByTopicId" resultMap="queryTalkListMap">
        SELECT tb1.talk_id, tb2.user_nickname, tb1.talk_content, tb1.talk_pic_url, tb1.talk_like_num, tb3.commentCount
        FROM db_sport.talk tb1
                     LEFT JOIN db_sport.`user` tb2 ON tb1.user_id = tb2.user_id
                     LEFT JOIN (SELECT talk_id, count(*) AS 'commentCount'
                                FROM db_sport.comment
                                GROUP BY comment.talk_id) AS tb3 ON tb1.talk_id = tb3.talk_id
        WHERE tb1.topic_id = #{topicId}
    </select>

    <!-- 用户添加评论 -->
    <insert id="insertComment">
        insert into db_sport.comment (
        <if test="punchcardId != null">
            punchcard_id,
        </if>
        <if test="talkId != null != null">
            talk_id,
        </if>
        comment_content, user_id, comment_time, comment_type) values (
        <if test="punchcardId != null">
            #{punchcardId},
        </if>
        <if test="talkId != null != null">
            #{talkId},
        </if>
        #{commentContent},#{userId},(select now()),#{commentType}
                )
    </insert>
</mapper>